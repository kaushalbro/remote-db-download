#!/bin/bash
current_datetime=$(date +"%Y-%m-%d-%H:%M:%S")
config_file_name="/tmp/remote-db-download.conf"
new_config_file_name="/tmp/remote-db-download_"$current_datetime".conf"

mv $config_file_name $new_config_file_name;
CONFIG_FILE=$new_config_file_name;

if [ -z "$CONFIG_FILE" ]; then
    echo "Error: CONFIG_FILE variable is empty."
    exit 1
fi

if [ ! -f "$CONFIG_FILE" ]; then
    echo "Error: Configuration file $CONFIG_FILE not found."
    exit 1
fi
# Read configuration settings
source "$CONFIG_FILE"
MYSQL_USER="$REMOTE_SQl_DB_USER"
MYSQL_PASSWORD="$REMOTE_SQl_DB_PASSWORD"
SCHEMA=$(mysql -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" --skip-column-names -e "SELECT GROUP_CONCAT(schema_name) FROM information_schema.schemata WHERE schema_name NOT IN ('information_schema', 'mysql', 'performance_schema', 'sys');")
#convert string to array:
# Set the delimiter
delimiter=","
# Split the string into an array
IFS="$delimiter" read -r -a schema_array <<< "$SCHEMA"
options=""
schema_array=("All" "${schema_array[@]}")
for element in "${schema_array[@]}"; do
if [ ${schema_array[0]} ]; then
    options+="$element \"Backup-$element-db\" "
else
    options+="$element \"Backup-$element\" "
fi
done
# Display the whiptail menu and store the selected options
menu_width=70
DATABASE=$(whiptail --title "Backup/Export Database" --menu "Choose a Database to backup" $((menu_width - 50)) $menu_width 10 \ $options 3>&1 1>&2 2>&3)
# Check if whiptail command succeeded
if [ $? -gt 0 ]; then # user pressed <Cancel> button
         rm $new_config_file_name;
         exit 0;
fi
# Check if TO_RUN is empty or "End" was selected
# eval to execute command on terminal--all-databases
#db_name="$DATABASE"-database-backup-"$current_datetime".sql;
db_name=backup_db.sql;
if [ "$DATABASE" = " All" ]; then
        echo ""
        echo ""
        echo "Backupping All sql database please wait..........";
        echo ""
        echo ""
        eval "mysqldump" -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" --all-databases ">" "/tmp/$db_name"
        rm $new_config_file_name;
        echo "All database backup Completed.    ";
        exit 0;
else
       declare -i n=10
        db_size=$(mysql -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" -s -N -e "SELECT ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS size_mb FROM information_schema.tables WHERE table_schema = '$DATABASE';")
        echo ""
        echo ""
        echo "Backupping $DATABASE please wait..........";
        echo ""
        echo ""
         eval "mysqldump" -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" "$DATABASE" ">" "/tmp/$db_name"
         rm $new_config_file_name;
        n=$n+1;

        if [ $n = 11 ]; then
          echo "Backup Completed.    ";
           exit  0 ;
        fi
    # if [ -f ./backup_db.sql ]; then

    # else
    #     rm "$new_config_file_name";
    #     exit  0 ;
    # fi
fi

exit 0

echo $db_name;
